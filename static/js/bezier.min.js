const NEWTON_ITERATIONS=4,NEWTON_MIN_SLOPE=.001,SUBDIVISION_PRECISION=1e-7,SUBDIVISION_MAX_ITERATIONS=100,kSplineTableSize=101,kSampleStepSize=1/(kSplineTableSize-1),float32ArraySupported="function"==typeof Float32Array;function A(e,r){return 1-3*r+3*e}function B(e,r){return 3*r-6*e}function C(e){return 3*e}function calcBezier(e,r,n){return((A(r,n)*e+B(r,n))*e+C(r))*e}function getSlope(e,r,n){return 3*A(r,n)*e*e+2*B(r,n)*e+C(r)}function binarySubdivide(e,r,n,t,S){let i,a,l=0;for(;0<(i=calcBezier(a=r+(n-r)/2,t,S)-e)?n=a:r=a,Math.abs(i)>SUBDIVISION_PRECISION&&++l<SUBDIVISION_MAX_ITERATIONS;);return a}function newtonRaphsonIterate(r,n,t,S){for(let e=0;e<NEWTON_ITERATIONS;++e){var i=getSlope(n,t,S);if(0===i)return n;n-=(calcBezier(n,t,S)-r)/i}return n}function LinearEasing(e){return e}function bezier(a,r,l,n){if(console.assert(0<=a&&a<=1&&0<=l&&l<=1),a===r&&l===n)return LinearEasing;let o=new(float32ArraySupported?Float32Array:Array)(kSplineTableSize);for(let e=0;e<kSplineTableSize;++e)o[e]=calcBezier(e*kSampleStepSize,a,l);return function(e){return 0===e?0:1===e?1:calcBezier(function(e){let r=0,n=1;for(var t=kSplineTableSize-1;n!==t&&o[n]<=e;++n)r+=kSampleStepSize;--n;var S=(e-o[n])/(o[n+1]-o[n]),i=getSlope(S=r+S*kSampleStepSize,a,l);return i>=NEWTON_MIN_SLOPE?newtonRaphsonIterate(e,S,a,l):0===i?S:binarySubdivide(e,r,r+kSampleStepSize,a,l)}(e),r,n)}}
